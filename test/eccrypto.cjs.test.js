"use strict";var t=require("bitcoin-computer-bitcore");var e=require("crypto");var r=require("crypto-js");var n=require("eciesjs");function o(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}function c(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(r){if("default"!==r){var n=Object.getOwnPropertyDescriptor(t,r);Object.defineProperty(e,r,n.get?n:{enumerable:!0,get:function(){return t[r]}})}})),e.default=t,Object.freeze(e)}var i=o(e);var s=o(r);var f=c(n);function u(t){return Buffer.from(s.default.SHA256(t).toString(),"hex").toString("hex").substr(0,4)}function a(t){return`${u(t)};${t}`}function l(t){const e=t.substr(0,4);const r=t.substr(5);if(!function(t,e){return u(t)===e}(r,e))throw new Error("Decryption failure");return r}function p(){return i.default.randomBytes(32).toString("hex")}function y(t,e){if(!/^[0-9a-f]{64}$/.test(e))throw new Error("Invalid secret");const r=Buffer.from(e,"hex").toString("binary");const n=a(t);return s.default.AES.encrypt(n,r).toString()}function d(t,e){if(!/^[0-9a-f]{64}$/.test(e))throw new Error("Invalid secret");const r=Buffer.from(e,"hex").toString("binary");return l(s.default.AES.decrypt(t,r).toString(s.default.enc.Utf8))}function m(t,e){if(!/^0[2-3][0-9a-f]{64}|04[0-9a-f]{128}$/.test(e))throw new Error("Invalid publicKey");const r=a(t);return f.encrypt(e,Buffer.from(r,"utf8")).toString("base64")}function h(t,e){if(!/^[0-9a-f]{64}$/.test(e))throw new Error("Invalid privateKey");return l(f.decrypt(e,Buffer.from(t,"base64")).toString("utf8"))}function g(t,e){const r=t.split(".");let n="";if(e.forEach((t=>{r.forEach((e=>{try{n=d(e,t)}catch(t){const e=["Decryption failure","Malformed UTF-8 data"];if(t instanceof Error&&!e.includes(t.message))throw t}}))})),n)return n;throw new Error("Decryption failure")}function b({__cypher:t,__secrets:e},r){let n="";if(r.forEach((r=>{e.forEach((e=>{try{const o=h(e,r);n=d(t,o)}catch(t){const e=["Decryption failure","Unsupported state or unable to authenticate data"];if(t instanceof Error&&!e.includes(t.message))throw t}}))})),n)return n;throw new Error("Decryption failure")}const{PrivateKey:x}=t.Bitcoin;describe("Crypto",(()=>{describe("Random secret",(()=>{it("Tests random secret",(()=>{const t=p();expect(t.length).toBe(64)}))})),describe("Symmetric encryption",(()=>{it("Tests symmetric encryption",(()=>{const t=p();const e=y("Hello, World",t);expect(e).toBeDefined(),expect(typeof e).toBe("string");const r=d(e,t);expect(r).toBe("Hello, World")}))})),describe("Asymmetric encryption",(()=>{it("Tests asymmetric encryption",(()=>{const t=new x;const e=t.toPublicKey();const r=t.toBuffer().toString("hex");const n=m("Hello, World",e.toString());expect(n).toBeDefined(),expect(typeof n).toBe("string");const o=h(n,r);expect(o).toBe("Hello, World")}))})),describe("Symmetric encryption multi-secret",(()=>{it("Symmetric encryption multi-secret",(()=>{const t=p();const e=p();const r=[t,e].map((t=>y("Hello, World",t))).join(".");expect(r).toBeDefined(),expect(typeof r).toBe("string");const n=g(r,[t]);expect(n).toBe("Hello, World");const o=g(r,[e]);expect(o).toBe("Hello, World")}))})),describe("Asymmetric encryption multi-key",(()=>{it("Tests asymmetric encryption multi-key",(()=>{const t=new x;const e=t.toPublicKey();const r=t.toBuffer().toString("hex");const n=e.toString();const o=new x;const c=o.toPublicKey();const i=o.toBuffer().toString("hex");const s=c.toString();const f=JSON.stringify({a:"a"});const u=function(t,e){const r=p();return{__cypher:y(t,r),__secrets:e.map((t=>m(r,t)))}}(f,[n,s]);expect(u).toEqual({__cypher:expect.any(String),__secrets:[expect.any(String),expect.any(String)]});const a=b(u,[r]);const l=b(u,[i]);expect(a).toBe(f),expect(l).toBe(f)}))}))}));
