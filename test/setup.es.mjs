import t from"http";import e from"https";import r from"url";import s from"util";var o=t;var n=e;var i=r;function a(t){"string"==typeof t&&(t=function(t){var e=i.parse(t);var r=e.hostname;var s=parseInt(e.port,10);var o=e.protocol;o=o.substring(0,o.length-1);var n=e.auth.split(":");return{host:r,port:s,protocol:o,user:n[0]?decodeURIComponent(n[0]):null,pass:n[1]?decodeURIComponent(n[1]):null}}(t)),t=t||{},this.host=t.host||"127.0.0.1",this.port=t.port||8332,this.user=t.user||"user",this.pass=t.pass||"pass",this.protocol="http"===t.protocol?o:n,this.batchedCalls=null,this.disableAgent=t.disableAgent||!1;var e=void 0!==t.rejectUnauthorized;this.rejectUnauthorized=!e||t.rejectUnauthorized,a.config.log?this.log=a.config.log:this.log=a.loggers[a.config.logger||"normal"]}var l=console.log.bind(console);var c=function(){};function d(t,e){var r=this;t=JSON.stringify(t);var s=this.user+":"+this.pass;var o=Buffer.from&&Buffer.from!==Uint8Array.from?Buffer.from(s):new Buffer(s);this.auth=o.toString("base64");var n={host:r.host,path:"/",method:"POST",port:r.port,rejectUnauthorized:r.rejectUnauthorized,agent:!r.disableAgent&&void 0};if(r.httpOptions)for(var i in r.httpOptions)n[i]=r.httpOptions[i];var a=!1;var l="Bitcoin JSON-RPC: ";var c=this.protocol.request(n,(function(t){var s="";t.on("data",(function(t){s+=t})),t.on("end",(function(){if(!a)if(a=!0,401!==t.statusCode)if(403!==t.statusCode){if(500===t.statusCode&&"Work queue depth exceeded"===s.toString("utf8")){var o=new Error("Bitcoin JSON-RPC: "+s.toString("utf8"));return o.code=429,void e(o)}var n;try{n=JSON.parse(s)}catch(o){r.log.err(o.stack),r.log.err(s),r.log.err("HTTP Status code:"+t.statusCode);var i=new Error(l+"Error Parsing JSON: "+o.message);return void e(i)}e(n.error,n)}else e(new Error(l+"Connection Rejected: 403 Forbidden"));else e(new Error(l+"Connection Rejected: 401 Unnauthorized"))}))}));c.on("error",(function(t){var r=new Error(l+"Request Error: "+t.message);a||(a=!0,e(r))})),c.setHeader("Content-Length",t.length),c.setHeader("Content-Type","application/json"),c.setHeader("Authorization","Basic "+r.auth),c.write(t),c.end()}a.loggers={none:{info:c,warn:c,err:c,debug:c},normal:{info:l,warn:l,err:l,debug:c},debug:{info:l,warn:l,err:l,debug:l}},a.config={logger:"normal"},a.prototype.batch=function(t,e){this.batchedCalls=[],t(),d.call(this,this.batchedCalls,e),this.batchedCalls=null},a.callspec={abandonTransaction:"str",abortRescan:"",addMultiSigAddress:"",addNode:"",analyzePSBT:"str",backupWallet:"",bumpFee:"str",clearBanned:"",combinePSBT:"obj",combineRawTransaction:"obj",convertToPSBT:"str",createMultiSig:"",createPSBT:"obj",createRawTransaction:"obj obj",createWallet:"str",decodePSBT:"str",decodeScript:"str",decodeRawTransaction:"",deriveAddresses:"str",disconnectNode:"",dumpPrivKey:"",dumpWallet:"str",encryptWallet:"",enumerateSigners:"",estimateFee:"",estimateSmartFee:"int str",estimatePriority:"int",generate:"int",generateBlock:"str obj",generateToAddress:"int str",generateToDescriptor:"int str",getAccount:"",getAccountAddress:"str",getAddedNodeInfo:"",getAddressMempool:"obj",getAddressUtxos:"obj",getAddressBalance:"obj",getAddressDeltas:"obj",getAddressesByLabel:"str",getAddressInfo:"str",getAddressTxids:"obj",getAddressesByAccount:"",getBalance:"str int",getBalances:"",getBestBlockHash:"",getBlockDeltas:"str",getBlock:"str int",getBlockchainInfo:"",getBlockCount:"",getBlockFilter:"str",getBlockHashes:"int int obj",getBlockHash:"int",getBlockHeader:"str",getBlockNumber:"",getBlockStats:"str",getBlockTemplate:"",getConnectionCount:"",getChainTips:"",getChainTxStats:"",getDescriptorInfo:"str",getDifficulty:"",getGenerate:"",getHashesPerSec:"",getIndexInfo:"",getInfo:"",getMemoryInfo:"",getMemoryPool:"",getMemPoolAncestors:"str",getMemPoolDescendants:"str",getMemPoolEntry:"str",getMemPoolInfo:"",getMiningInfo:"",getNetTotals:"",getNetworkHashPS:"",getNetworkInfo:"",getNewAddress:"str str",getNodeAddresses:"",getPeerInfo:"",getRawChangeAddress:"",getRawMemPool:"bool",getRawTransaction:"str int",getReceivedByAccount:"str int",getReceivedByAddress:"str int",getReceivedByLabel:"str",getRpcInfo:"",getSpentInfo:"obj",getTransaction:"",getTxOut:"str int bool",getTxOutProof:"",getTxOutSetInfo:"",getUnconfirmedBalance:"",getWalletInfo:"",getWork:"",getZmqNotifications:"",finalizePSBT:"str",fundRawTransaction:"str",help:"",importAddress:"str str bool",importDescriptors:"str",importMulti:"obj obj",importPrivKey:"str str bool",importPrunedFunds:"str, str",importPubKey:"str",importWallet:"str",invalidateBlock:"str",joinPSBTs:"obj",keyPoolRefill:"",listAccounts:"int",listAddressGroupings:"",listBanned:"",listDescriptors:"",listLabels:"",listLockUnspent:"bool",listReceivedByAccount:"int bool",listReceivedByAddress:"int bool",listReceivedByLabel:"",listSinceBlock:"str int",listTransactions:"str int int",listUnspent:"int int",listWalletDir:"",listWallets:"",loadWallet:"str",lockUnspent:"",logging:"",move:"str str float int str",ping:"",preciousBlock:"str",prioritiseTransaction:"str float int",pruneBlockChain:"int",psbtBumpFee:"str",removePrunedFunds:"str",reScanBlockChain:"",saveMemPool:"",send:"obj",setHDSeed:"",setLabel:"str str",setWalletFlag:"str",scanTxOutSet:"str",sendFrom:"str str float int str str",sendMany:"str obj int str",sendRawTransaction:"str",sendToAddress:"str float str str",setAccount:"",setBan:"str str",setNetworkActive:"bool",setGenerate:"bool int",setTxFee:"float",signMessage:"",signMessageWithPrivKey:"str str",signRawTransaction:"",signRawTransactionWithKey:"str obj",signRawTransactionWithWallet:"str",stop:"",submitBlock:"str",submitHeader:"str",testMemPoolAccept:"obj",unloadWallet:"",upgradeWallet:"",uptime:"",utxoUpdatePSBT:"str",validateAddress:"",verifyChain:"",verifyMessage:"",verifyTxOutProof:"str",walletCreateFundedPSBT:"",walletDisplayAddress:"str",walletLock:"",walletPassPhrase:"string int",walletPassphraseChange:"",walletProcessPSBT:"str"};var p=function(t,e,r){return Array.prototype.slice.call(t,e,r)};function g(){return parseInt(1e5*Math.random())}!function(t,e,r){function s(t,e){return function(){var s=arguments.length-1;this.batchedCalls&&(s=arguments.length);for(var o=0;o<s;o++)e[o]&&(arguments[o]=e[o](arguments[o]));this.batchedCalls?this.batchedCalls.push({jsonrpc:"2.0",method:t,params:p(arguments),id:g()}):r.call(this,{method:t,params:p(arguments,0,arguments.length-1),id:g()},arguments[arguments.length-1])}}var o={str:function(t){return t.toString()},int:function(t){return parseFloat(t)},float:function(t){return parseFloat(t)},bool:function(t){return!0===t||"1"==t||"true"==t||"true"==t.toString().toLowerCase()},obj:function(t){return"string"==typeof t?JSON.parse(t):t}};for(var n in e){var i=[];if(e[n].length){i=e[n].split(" ");for(var a=0;a<i.length;a++)o[i[a]]?i[a]=o[i[a]]:i[a]=o.str}var l=n.toLowerCase();t.prototype[n]=s(l,i),t.prototype[l]=t.prototype[n]}}(a,a.callspec,d);var u=a;const f=new u({protocol:process.env.RPC_PROTOCOL,user:process.env.RPC_USER,pass:process.env.RPC_PASSWORD,host:process.env.RPC_HOST,port:process.env.RPC_PORT});const h={createwallet:s.promisify(u.prototype.createwallet.bind(f)),getaddressinfo:s.promisify(u.prototype.getaddressinfo.bind(f)),getBlock:s.promisify(u.prototype.getBlock.bind(f)),getBlockchainInfo:s.promisify(u.prototype.getBlockchainInfo.bind(f)),getBlockHash:s.promisify(u.prototype.getBlockHash.bind(f)),getNewAddress:s.promisify(u.prototype.getNewAddress.bind(f)),generateToAddress:s.promisify(u.prototype.generateToAddress.bind(f)),getRawTransaction:s.promisify(u.prototype.getRawTransaction.bind(f)),importaddress:s.promisify(u.prototype.importaddress.bind(f)),listunspent:s.promisify(u.prototype.listunspent.bind(f)),sendRawTransaction:s.promisify(u.prototype.sendRawTransaction.bind(f)),sendToAddress:s.promisify(u.prototype.sendToAddress.bind(f))};parseInt(process.env.BC_DEFAULT_FEE||"",10),parseInt(process.env.BC_SCRIPT_CHUNK_SIZE||"",10);const b=parseInt(process.env.MWEB_HEIGHT||"",10)||432;var m,y;y=function*(){const{result:t}=yield h.getBlockchainInfo();const e=t.blocks;if(e<b-1){const{result:t}=yield h.getNewAddress("","legacy");const r=b-e-1;yield h.generateToAddress(r,t);const{result:s}=yield h.getNewAddress("mweb","mweb");yield h.sendToAddress(s,1),yield h.generateToAddress(1,t)}},new((m=void 0)||(m=Promise))((function(t,e){function r(t){try{o(y.next(t))}catch(t){e(t)}}function s(t){try{o(y.throw(t))}catch(t){e(t)}}function o(e){var o;e.done?t(e.value):(o=e.value,o instanceof m?o:new m((function(t){t(o)}))).then(r,s)}o((y=y.apply(void 0,[])).next())}));
